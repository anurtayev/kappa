schema {
  query: Query
  mutation: Mutation
}

type AttributeValueTerm {
  attribute: String!
  type: InputType!
  value: String!
}

type AttributesConnection {
  attributes: [String!]
  nextToken: String
}

type FolderConnection {
  items: [String!]
  nextToken: String
}

type MetaData {
  attributes: [AttributeValueTerm!]
  id: String!
  tags: [String!]
}

type Mutation {
  updateMetaData(id: String!, metaDataInput: MetaDataInput): MetaData
}

type Query {
  getAttributes(nextToken: String): AttributesConnection
  getMeta(id: String!): MetaData
  getTags(nextToken: String): TagsConnection
  listFolder(id: String, nextToken: String, pageSize: Int!): FolderConnection
  search(nextToken: String, pageSize: Int!, searchInput: SearchInput!): FolderConnection
}

type TagsConnection {
  nextToken: String
  tags: [String!]
}

enum InputType {
  NUMBER
  STRING
}

enum SortOrder {
  ASC
  DESC
}

input AttributeSortTerm {
  attribute: String!
  sortOrder: SortOrder!
}

input AttributeValueTermInput {
  attribute: String!
  type: InputType!
  value: String!
}

input MetaDataInput {
  attributes: [AttributeValueTermInput!]
  tags: [String!]
}

input SearchInput {
  filter: MetaDataInput
  sorter: [AttributeSortTerm!]
}
